#define F_CPU 16000000UL 
#include <avr/io.h>

int main()
{
	uint8_t val;			//8-bit int type for pot values
	float pos;			//holds value to determine servo position
	
	DDRB |= (1<<PB1); //set PB1 as output
	DDRC |= (0<<PC0); //set PC0 as output for pot
	
	
	TCCR1A |= (1<<COM1A1); //Non-inverted
	
	TCCR1A |= (1<<WGM11) | (0<<WGM10);	
	TCCR1B |= (1<<WGM13) | (1<<WGM12); //fast PWM
	TCCR1B |= (0<<CS12) | (1<<CS11) | (1<<CS10); //prescaler 64
	ICR1 = ((double)F_CPU) / (64 * 50); 
	ADCSRA |= (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);	//0b10000111
	ADMUX |= (0<<REFS1) | (1<<REFS0) | (1<<ADLAR);	
	
	while(1)
	{
		ADCSRA |= (1<<ADSC);	 //start the ADC conversion
		
		while((ADCSRA &(1<<ADIF)) == 0);		//waits for ADC to finish
		
		val = ADCH << 1;			//store high byte of ADC
		pos = (val * 5 )/ 1024.0;	//store the potentiometer value
	
		pos =  (pos * 385) + 150;	//determine the servo position
		
		OCR1A = (int)pos; //update servo position
	}
}
